var m=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var h=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var p=(r,e,i)=>e in r?m(r,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[e]=i,l=(r,e)=>{for(var i in e||(e={}))h.call(e,i)&&p(r,i,e[i]);if(n)for(var i of n(e))b.call(e,i)&&p(r,i,e[i]);return r},y=(r,e)=>u(r,d(e));import{Z as c,a0 as f,K as g,r as w,cP as x}from"./index.3ff546ff.js";import S from"./FeatureLayerView2D.838ef1a1.js";import"./Container.ad55f2c3.js";import"./enums.84480fc7.js";import"./LayerView.47c91d96.js";import"./schemaUtils.9b7bfa65.js";import"./Utils.33cfd3a8.js";import"./enums.457e23f9.js";import"./Texture.858d247e.js";import"./VertexElementDescriptor.0406f2d4.js";import"./visualVariablesUtils.d0321657.js";import"./createSymbolSchema.5a108c22.js";import"./MaterialKey.b19bc923.js";import"./CIMSymbolHelper.5d0e1b5b.js";import"./BidiEngine.b9926823.js";import"./GeometryUtils.e53da643.js";import"./ExpandedCIM.3532769c.js";import"./quantizationUtils.bf322bbd.js";import"./MD5.67d7a872.js";import"./util.8bcd1f5e.js";import"./popupUtils.2d563b2c.js";import"./floorFilterUtils.98f77688.js";import"./RefreshableLayerView.3cfbced1.js";function v(r,e){return!r.visible||r.minScale!==0&&e>r.minScale||r.maxScale!==0&&e<r.maxScale}let o=class extends S{initialize(){this.handles.add([g(this.view,"viewpoint",()=>this._update())])}_injectOverrides(r){let e=super._injectOverrides(r);const i=this.view.scale,s=this.layer.sublayers.filter(a=>v(a,i)).map(a=>a.subtypeCode);if(!s.length)return e;e=w(e)?e:new x().toJSON();const t=`NOT ${this.layer.subtypeField} IN (${s.join(",")})`;return e.where=e.where?`(${e.where}) AND (${t})`:t,e}_setLayersForFeature(r){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),i=r.attributes[e.name],s=this.layer.sublayers.find(t=>t.subtypeCode===i);r.layer=s,r.sourceLayer=this.layer}_createSchemaConfig(){const r={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(t=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:t.labelingInfo,labelsVisible:t.labelsVisible,renderer:t.renderer,subtypeCode:t.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(t=>t.subtypeCode).join(","),i=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let s=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return s+=i,y(l(l({},super._createSchemaConfig()),r),{definitionExpression:s})}};o=c([f("esri.views.2d.layers.SubtypeGroupLayerView2D")],o);const H=o;export{H as default};
