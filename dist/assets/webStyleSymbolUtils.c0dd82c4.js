import{bw as d,bx as w,gZ as N,bz as u,g_ as S,bu as P,e as $,by as O,bA as p,bB as v,g$ as x,h0 as f,h1 as h,bv as B}from"./index.3ff546ff.js";import{c as z,a as g}from"./devEnvironmentUtils.f51567b1.js";function R(e,t,a,l){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?E(e,t,l):P(e,t,l).then(o=>A(o,e.name,t,a,l)):Promise.reject(new $("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function A(e,t,a,l,o){const b=e.data,y={portal:a&&a.portal||O.getDefault(),url:u(e.baseUrl),origin:"portal-item"},n=b.items.find(r=>r.name===t);if(!n){const r=`The symbol name '${t}' could not be found`;return Promise.reject(new $("symbolstyleutils:symbol-name-not-found",r,{symbolName:t}))}let m=p(v(n,l),y),i=n.thumbnail&&n.thumbnail.href;const c=n.thumbnail&&n.thumbnail.imageData;z()&&(m=g(m),i=g(i));const j={portal:a.portal,url:u(S(m)),origin:"portal-item"};return d(m,o).then(r=>{const U=l==="cimRef"?w(r.data):r.data,s=N(U,j);if(s&&x(s)){if(i){const D=p(i,y);s.thumbnail=new f({url:D})}else c&&(s.thumbnail=new f({url:`data:image/png;base64,${c}`}));e.styleUrl?s.styleOrigin=new h({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(s.styleOrigin=new h({portal:a.portal,styleName:e.styleName,name:t}))}return s})}function E(e,t,a){const l=B.replace(/\{SymbolName\}/gi,e.name);return d(l,a).then(o=>{const b=w(o.data);return N(b,{portal:t.portal,url:u(S(l)),origin:"portal-item"})})}export{A as fetchSymbolFromStyle,R as resolveWebStyleSymbol};
